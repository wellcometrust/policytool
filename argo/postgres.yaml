apiVersion: v1
kind: PersistentVolume
metadata:
  name: argo-postgres-volume
  namespace: argo
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: argo-postgres-claim
  namespace: argo
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: argo
  annotations:
    kubernetes.io/change-cause: N/A
spec:
  selector:
    matchLabels:
      app: postgres
  serviceName: "postgres"
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgresql
        image: postgres:12.2-alpine
        ports:
        - containerPort: 5432
        env:
          - name: POSTGRES_PASSWORD
            value: development
          - name: POSTGRES_DB
            value: warehouse
        volumeMounts:
        - name: argo-postgres-claim
          mountPath: /var/lib/postgresql/datalabs
        - name: psqlinit
          mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: argo-postgres-claim
          persistentVolumeClaim:
            claimName: argo-postgres-claim
        - name: psqlinit
          configMap:
            name: psqlinit
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: argo
  labels:
    app: postgres
spec:
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
  selector:
    app: postgres
